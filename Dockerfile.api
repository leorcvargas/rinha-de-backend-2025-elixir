ARG ELIXIR_VERSION=1.18.4
# ARG OTP_VERSION=26.2.5.14
# ARG OTP_VERSION=27.3.4.2
ARG OTP_VERSION=28.0.2
ARG ALPINE_VERSION=3.21.4
ARG BUILDER_IMAGE="hexpm/elixir:${ELIXIR_VERSION}-erlang-${OTP_VERSION}-alpine-${ALPINE_VERSION}"
ARG RUNNER_IMAGE="alpine:${ALPINE_VERSION}"

FROM ${BUILDER_IMAGE} AS builder

RUN apk add --no-cache --virtual .build-deps \
  build-base git

WORKDIR /app

# Hex / Rebar
RUN mix local.hex --force && \
  mix local.rebar --force

ENV MIX_ENV=prod

# Deps & compilation
COPY mix.exs mix.lock ./
COPY bandido bandido
RUN mix deps.get --only $MIX_ENV
RUN mkdir config

COPY config/config.exs config/${MIX_ENV}.exs config/
RUN mix deps.compile

COPY priv priv
COPY lib  lib
RUN mix compile

COPY config/runtime.exs config/
COPY rel rel
RUN mix release

# ─────────────────────────────── Runtime stage ────────────────────────────────
FROM ${RUNNER_IMAGE}

RUN apk add --no-cache \
  tini libstdc++ ncurses-libs openssl

ENV LANG=C.UTF-8 \
  MIX_ENV=prod \
  HOME=/app

WORKDIR /app

COPY --from=builder --chown=nobody:root /app/_build/${MIX_ENV}/rel/rinhex ./

COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/sbin/tini","--","/entrypoint.sh"]
CMD ["/app/bin/server"]

