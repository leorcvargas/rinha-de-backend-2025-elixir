ARG ELIXIR_VERSION=1.18.4
# ARG OTP_VERSION=28.0.2
# ARG OTP_VERSION=27.3.4.2
ARG OTP_VERSION=26.2.5.14
ARG DEBIAN_VERSION=bookworm-20250721-slim
ARG BUILDER_IMAGE="docker.io/hexpm/elixir:${ELIXIR_VERSION}-erlang-${OTP_VERSION}-debian-${DEBIAN_VERSION}"
ARG RUNNER_IMAGE="docker.io/debian:${DEBIAN_VERSION}"

FROM ${BUILDER_IMAGE} AS builder

RUN apt-get update -y && apt-get install -y --no-install-recommends \
  build-essential git ca-certificates \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /app

RUN mix local.hex --force && mix local.rebar --force

ENV MIX_ENV=prod

COPY mix.exs mix.lock ./
RUN mix deps.get --only $MIX_ENV
RUN mkdir config

COPY config/config.exs config/${MIX_ENV}.exs config/
RUN mix deps.compile

COPY priv priv
COPY lib  lib
RUN mix compile

COPY config/runtime.exs config/
COPY rel rel
RUN mix release

FROM ${RUNNER_IMAGE}

RUN apt-get update -y && apt-get install -y --no-install-recommends \
  tini libstdc++6 libncurses6 openssl ca-certificates htop \
  && rm -rf /var/lib/apt/lists/*

ENV LANG=C.UTF-8 \
  MIX_ENV=prod \
  HOME=/app

WORKDIR /app

COPY --from=builder /app/_build/${MIX_ENV}/rel/rinhex ./

COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/usr/bin/tini","--","/entrypoint.sh"]
CMD ["/app/bin/server"]
